
package Unidad_12;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hckr
 */
public class ABMAutores extends javax.swing.JFrame {

    private final String CONTROLADOR = "org.postgresql.Driver";
    private final String URL_BASEDATOS = "jdbc:postgresql://localhost:5432/libros";
    private final String USUARIO = "postgres";
    private final String CLAVE = "12345";
    
    private final String CONSULTA_PREDETERMINADA = "select * from autores order by idAutor" ;
    private Autores autor;
    private Connection conexion;
    private Statement instruccion;
    private ResultSet resultado;
    
    
    public ABMAutores() {
        initComponents();
        conexionDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pAutor = new javax.swing.JPanel();
        lNombrePila = new javax.swing.JLabel();
        txtNombrePila = new javax.swing.JTextField();
        lApellidoPaterno = new javax.swing.JLabel();
        txtApellidoPaterno = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        spAutor = new javax.swing.JPanel();
        tAutor = new javax.swing.JScrollPane();
        tAuthor = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(12, 0), new java.awt.Dimension(12, 0), new java.awt.Dimension(12, 32767));
        mbMenu = new javax.swing.JMenuBar();
        mArchivo = new javax.swing.JMenu();
        mAcerca = new javax.swing.JMenuItem();
        mSalir = new javax.swing.JMenuItem();
        mABM = new javax.swing.JMenu();
        mGuardar = new javax.swing.JMenuItem();
        mModificar = new javax.swing.JMenuItem();
        mBorrar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Datos de Autor"));

        lNombrePila.setText("Nombre Pila");

        lApellidoPaterno.setText("Apellido Paterno");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        spAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Autores"));

        tAuthor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tAuthor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tAuthorMouseClicked(evt);
            }
        });
        tAutor.setViewportView(tAuthor);

        javax.swing.GroupLayout spAutorLayout = new javax.swing.GroupLayout(spAutor);
        spAutor.setLayout(spAutorLayout);
        spAutorLayout.setHorizontalGroup(
            spAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tAutor, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        spAutorLayout.setVerticalGroup(
            spAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spAutorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAutorLayout = new javax.swing.GroupLayout(pAutor);
        pAutor.setLayout(pAutorLayout);
        pAutorLayout.setHorizontalGroup(
            pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAutorLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pAutorLayout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrar))
                    .addGroup(pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pAutorLayout.createSequentialGroup()
                            .addComponent(lApellidoPaterno)
                            .addGap(18, 18, 18)
                            .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pAutorLayout.createSequentialGroup()
                            .addComponent(lNombrePila)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNombrePila, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        pAutorLayout.setVerticalGroup(
            pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAutorLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNombrePila)
                    .addComponent(txtNombrePila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lApellidoPaterno)
                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnModificar)
                    .addComponent(btnBorrar))
                .addGap(18, 18, 18)
                .addComponent(spAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mArchivo.setText("Archivo");

        mAcerca.setText("Acerca de...");
        mAcerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAcercaActionPerformed(evt);
            }
        });
        mArchivo.add(mAcerca);

        mSalir.setText("Salir");
        mSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSalirActionPerformed(evt);
            }
        });
        mArchivo.add(mSalir);

        mbMenu.add(mArchivo);

        mABM.setText("ABM");

        mGuardar.setText("Guardar");
        mGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGuardarActionPerformed(evt);
            }
        });
        mABM.add(mGuardar);

        mModificar.setText("Modificar");
        mModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mModificarActionPerformed(evt);
            }
        });
        mABM.add(mModificar);

        mBorrar.setText("Borrar");
        mBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBorrarActionPerformed(evt);
            }
        });
        mABM.add(mBorrar);

        mbMenu.add(mABM);

        setJMenuBar(mbMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(pAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSalirActionPerformed
        try {
            resultado.close();
            instruccion.close();
            conexion.close();
            System.exit(0);
        } catch (SQLException ex) {
            Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        guardarAutor();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tAuthorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tAuthorMouseClicked
        // TODO add your handling code here:
        buscarAutor(obtenerId());
    }//GEN-LAST:event_tAuthorMouseClicked

    private void mGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mGuardarActionPerformed
        guardarAutor();
    }//GEN-LAST:event_mGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        modificarAutor(obtenerId());
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        borrarAutor(obtenerId());
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void mBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBorrarActionPerformed
        borrarAutor(obtenerId());
    }//GEN-LAST:event_mBorrarActionPerformed

    private void mModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mModificarActionPerformed
        modificarAutor(obtenerId());
    }//GEN-LAST:event_mModificarActionPerformed

    private void mAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAcercaActionPerformed
        JOptionPane.showMessageDialog(ABMAutores.this, """
                                    Tarea Unidad 12 - ABM Autores
                                                     Usando JavaSwing
                                                © Gabriel Caballero 2023
                                    """);
    }//GEN-LAST:event_mAcercaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABMAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABMAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABMAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABMAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ABMAutores abmAut = new ABMAutores();
                abmAut.setVisible(true);
                abmAut.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel lApellidoPaterno;
    private javax.swing.JLabel lNombrePila;
    private javax.swing.JMenu mABM;
    private javax.swing.JMenuItem mAcerca;
    private javax.swing.JMenu mArchivo;
    private javax.swing.JMenuItem mBorrar;
    private javax.swing.JMenuItem mGuardar;
    private javax.swing.JMenuItem mModificar;
    private javax.swing.JMenuItem mSalir;
    private javax.swing.JMenuBar mbMenu;
    private javax.swing.JPanel pAutor;
    private javax.swing.JPanel spAutor;
    private javax.swing.JTable tAuthor;
    private javax.swing.JScrollPane tAutor;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtNombrePila;
    // End of variables declaration//GEN-END:variables

    private void conexionDB(){
        try {
            Class.forName(CONTROLADOR);
            try {
                conexion = DriverManager.getConnection(URL_BASEDATOS,
                        USUARIO,
                        CLAVE);
                cargarTabla();
            } catch (SQLException ex) {
                Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cargarTabla() throws SQLException{
        DefaultTableModel dt = new DefaultTableModel();
        instruccion = conexion.createStatement();
        resultado = instruccion.executeQuery(CONSULTA_PREDETERMINADA);
        ResultSetMetaData metaDatos = resultado.getMetaData();
        int numeroDeColumnas = metaDatos.getColumnCount();

        System.out.println("Tabla Autores de la base de datos Libros: \n");
        for (int i = 1; i <= numeroDeColumnas; i++) {
            dt.addColumn(metaDatos.getColumnLabel(i));
        }
        Object[] fila = new Object[numeroDeColumnas];

        while(resultado.next()){
            for (int i = 0; i < numeroDeColumnas; i++) {
                fila[i] = resultado.getObject(i+1);
            }
            dt.addRow(fila);
        }
        tAuthor.setModel(dt);
    }
    
    private Integer obtenerId(){
        int fila = tAuthor.getSelectedRow();
        int idAutor = Integer.parseInt(String.valueOf(tAuthor.getValueAt(fila, 0)));
        return idAutor;
    }
    
    private void guardarAutor(){
        autor = new Autores();
        autor.setNombrePila(txtNombrePila.getText());
        autor.setApellidoPaterno(txtApellidoPaterno.getText());
        int respuesta;

        try {
            PreparedStatement ps = conexion.prepareStatement("insert into autores (nombrepila, apellidopaterno) values (?,?)");
            ps.setString(1, autor.getNombrePila());
            ps.setString(2, autor.getApellidoPaterno());
            respuesta = ps.executeUpdate();
            cargarTabla();
            
        } catch (SQLException ex) {
            Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
            respuesta = ex.getErrorCode();
        }
            if(respuesta == 1){
                JOptionPane.showMessageDialog(rootPane,
                        "Registro del autor exitoso",
                        "Sistema",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        txtNombrePila.setText(null);
        txtApellidoPaterno.setText(null);
        txtNombrePila.grabFocus();
    }
    
    private void buscarAutor(Integer idAutor){
        try {
            PreparedStatement ps = conexion.prepareStatement("select * from autores where idautor = ?");
            ps.setInt(1, idAutor);
            ResultSet rs = ps.executeQuery();
            autor = new Autores();
            
            if(rs.next()){
                autor.setIdAutor(rs.getInt("idAutor"));
                autor.setNombrePila(rs.getString("nombrepila"));
                autor.setApellidoPaterno(rs.getString("apellidopaterno"));
                txtNombrePila.setText(autor.getNombrePila());
                txtApellidoPaterno.setText(autor.getApellidoPaterno());
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
            autor = null;
        } 
    }
    
    private void modificarAutor(int id){
        autor = new Autores();
        autor.setNombrePila(txtNombrePila.getText());
        autor.setApellidoPaterno(txtApellidoPaterno.getText());
        int respuesta;

        try {
            PreparedStatement ps = conexion.prepareStatement("update autores set nombrepila = ?, apellidopaterno = ? where idAutor = ?");
            ps.setString(1, autor.getNombrePila());
            ps.setString(2, autor.getApellidoPaterno());
            ps.setInt(3, id);
            respuesta = ps.executeUpdate();
            cargarTabla();
            
        } catch (SQLException ex) {
            Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
            respuesta = ex.getErrorCode();
        }
            if(respuesta == 1){
                JOptionPane.showMessageDialog(rootPane,
                        "Los datos del autor fueron modificados con exitosamente!",
                        "Sistema",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        txtNombrePila.setText(null);
        txtApellidoPaterno.setText(null);
        txtNombrePila.grabFocus();
    }
    
        private void borrarAutor(int id){
        autor = new Autores();
        autor.setNombrePila(txtNombrePila.getText());
        autor.setApellidoPaterno(txtApellidoPaterno.getText());
        int respuesta;

        try {
            PreparedStatement ps = conexion.prepareStatement("delete from autores where idAutor = ?");
            ps.setInt(1, id);
            respuesta = ps.executeUpdate();
            cargarTabla();
            
        } catch (SQLException ex) {
            Logger.getLogger(ABMAutores.class.getName()).log(Level.SEVERE, null, ex);
            respuesta = ex.getErrorCode();
        }
            if(respuesta == 1){
                JOptionPane.showMessageDialog(rootPane,
                        "El usuario fue borrado de manera exitosa",
                        "Sistema",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        txtNombrePila.setText(null);
        txtApellidoPaterno.setText(null);
        txtNombrePila.grabFocus();
    }
}
