/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Unidad_11;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author hckr
 */
public class CampoTexto extends javax.swing.JFrame {

    /**
     * Creates new form CampoTexto
     */
    public CampoTexto() {
        initComponents();
        ManejadorCampoTexto manejador = new ManejadorCampoTexto();
        txtCampoTexto1.addActionListener(manejador);
        txtCampoTexto2.addActionListener(manejador);
        txtCampoTexto3.addActionListener(manejador);
        txtCampoContrasenha.addActionListener(manejador);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCampoTexto1 = new javax.swing.JTextField();
        txtCampoTexto2 = new javax.swing.JTextField();
        txtCampoTexto3 = new javax.swing.JTextField();
        txtCampoContrasenha = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtCampoTexto2.setText("Escriba texto aqu√≠");

        txtCampoTexto3.setText("Campo de texto no editable");
        txtCampoTexto3.setEnabled(false);

        txtCampoContrasenha.setText("jPasswordField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCampoTexto1)
                    .addComponent(txtCampoTexto2)
                    .addComponent(txtCampoTexto3)
                    .addComponent(txtCampoContrasenha))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCampoTexto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCampoTexto2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCampoTexto3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCampoContrasenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CampoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CampoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CampoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CampoTexto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CampoTexto().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField txtCampoContrasenha;
    private javax.swing.JTextField txtCampoTexto1;
    private javax.swing.JTextField txtCampoTexto2;
    private javax.swing.JTextField txtCampoTexto3;
    // End of variables declaration//GEN-END:variables

    private class ManejadorCampoTexto implements ActionListener{
        
        @Override
        public void actionPerformed(ActionEvent evento){
            String cadena = "";
            if(evento.getSource() == txtCampoTexto1){
                cadena = String.format("campoTexto1: %s",
                        evento.getActionCommand());
            }
            else if(evento.getSource() == txtCampoTexto2){
                cadena = String.format("CampoTexto2: %s",
                        evento.getActionCommand());
            }
            else if(evento.getSource() == txtCampoTexto3){
                cadena = String.format("CampoTexto3: %s",
                        evento.getActionCommand());
            }
            else if(evento.getSource() == txtCampoContrasenha){
                cadena = String.format("CampoContrasenha: %s",
                        new String(txtCampoContrasenha.getPassword()));
            }
            
            JOptionPane.showMessageDialog(null, cadena);
        }
    }

}
